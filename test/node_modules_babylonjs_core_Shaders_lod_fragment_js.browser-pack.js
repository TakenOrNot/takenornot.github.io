"use strict";
(self["webpackChunkab2ac"] = self["webpackChunkab2ac"] || []).push([["node_modules_babylonjs_core_Shaders_lod_fragment_js"],{

/***/ "./node_modules/@babylonjs/core/Shaders/lod.fragment.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babylonjs/core/Shaders/lod.fragment.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   lodPixelShader: () => (/* binding */ lodPixelShader)
/* harmony export */ });
/* harmony import */ var _Engines_shaderStore_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Engines/shaderStore.js */ "./node_modules/@babylonjs/core/Engines/shaderStore.js");
// Do not edit.

const name = "lodPixelShader";
const shader = `#extension GL_EXT_shader_texture_lod : enable
precision highp float;const float GammaEncodePowerApprox=1.0/2.2;varying vec2 vUV;uniform sampler2D textureSampler;uniform float lod;uniform vec2 texSize;uniform int gamma;void main(void)
{gl_FragColor=texture2DLodEXT(textureSampler,vUV,lod);if (gamma==0) {gl_FragColor.rgb=pow(gl_FragColor.rgb,vec3(GammaEncodePowerApprox));}}
`;
// Sideeffect
if (!_Engines_shaderStore_js__WEBPACK_IMPORTED_MODULE_0__.ShaderStore.ShadersStore[name]) {
    _Engines_shaderStore_js__WEBPACK_IMPORTED_MODULE_0__.ShaderStore.ShadersStore[name] = shader;
}
/** @internal */
const lodPixelShader = { name, shader };
//# sourceMappingURL=lod.fragment.js.map

/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZV9tb2R1bGVzX2JhYnlsb25qc19jb3JlX1NoYWRlcnNfbG9kX2ZyYWdtZW50X2pzLmJyb3dzZXItcGFjay5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ3dEO0FBQ3hEO0FBQ0E7QUFDQSxzQkFBc0IsMkNBQTJDLGlCQUFpQixpQ0FBaUMsa0JBQWtCLHFCQUFxQixrQkFBa0I7QUFDNUssQ0FBQyxxREFBcUQsZUFBZTtBQUNyRTtBQUNBO0FBQ0EsS0FBSyxnRUFBVztBQUNoQixJQUFJLGdFQUFXO0FBQ2Y7QUFDQTtBQUNPLHlCQUF5QjtBQUNoQyIsInNvdXJjZXMiOlsid2VicGFjazovL2FiMmFjLy4vbm9kZV9tb2R1bGVzL0BiYWJ5bG9uanMvY29yZS9TaGFkZXJzL2xvZC5mcmFnbWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBEbyBub3QgZWRpdC5cbmltcG9ydCB7IFNoYWRlclN0b3JlIH0gZnJvbSBcIi4uL0VuZ2luZXMvc2hhZGVyU3RvcmUuanNcIjtcbmNvbnN0IG5hbWUgPSBcImxvZFBpeGVsU2hhZGVyXCI7XG5jb25zdCBzaGFkZXIgPSBgI2V4dGVuc2lvbiBHTF9FWFRfc2hhZGVyX3RleHR1cmVfbG9kIDogZW5hYmxlXG5wcmVjaXNpb24gaGlnaHAgZmxvYXQ7Y29uc3QgZmxvYXQgR2FtbWFFbmNvZGVQb3dlckFwcHJveD0xLjAvMi4yO3ZhcnlpbmcgdmVjMiB2VVY7dW5pZm9ybSBzYW1wbGVyMkQgdGV4dHVyZVNhbXBsZXI7dW5pZm9ybSBmbG9hdCBsb2Q7dW5pZm9ybSB2ZWMyIHRleFNpemU7dW5pZm9ybSBpbnQgZ2FtbWE7dm9pZCBtYWluKHZvaWQpXG57Z2xfRnJhZ0NvbG9yPXRleHR1cmUyRExvZEVYVCh0ZXh0dXJlU2FtcGxlcix2VVYsbG9kKTtpZiAoZ2FtbWE9PTApIHtnbF9GcmFnQ29sb3IucmdiPXBvdyhnbF9GcmFnQ29sb3IucmdiLHZlYzMoR2FtbWFFbmNvZGVQb3dlckFwcHJveCkpO319XG5gO1xuLy8gU2lkZWVmZmVjdFxuaWYgKCFTaGFkZXJTdG9yZS5TaGFkZXJzU3RvcmVbbmFtZV0pIHtcbiAgICBTaGFkZXJTdG9yZS5TaGFkZXJzU3RvcmVbbmFtZV0gPSBzaGFkZXI7XG59XG4vKiogQGludGVybmFsICovXG5leHBvcnQgY29uc3QgbG9kUGl4ZWxTaGFkZXIgPSB7IG5hbWUsIHNoYWRlciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9kLmZyYWdtZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==